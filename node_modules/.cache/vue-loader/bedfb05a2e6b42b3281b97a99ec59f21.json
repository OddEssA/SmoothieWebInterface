{"remainingRequest":"/home/arthur/dev/js/Smoothie/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/arthur/dev/js/Smoothie/src/monitor/views/Start.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/home/arthur/dev/js/Smoothie/src/monitor/views/Start.vue","mtime":1536012411215},{"path":"/home/arthur/dev/js/Smoothie/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/arthur/dev/js/Smoothie/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/arthur/dev/js/Smoothie/node_modules/postcss-loader/lib/index.js","mtime":499162500000},{"path":"/home/arthur/dev/js/Smoothie/node_modules/less-loader/dist/cjs.js","mtime":1535381346263},{"path":"/home/arthur/dev/js/Smoothie/node_modules/cache-loader/dist/cjs.js","mtime":1535381333659},{"path":"/home/arthur/dev/js/Smoothie/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.center {\n  text-align: center;\n}\n",{"version":3,"sources":["Start.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA;AACA;AACA","file":"Start.vue","sourceRoot":"src/monitor/views","sourcesContent":["<template>\n  <div class=\"start\">\n    <div class=\"container center\">\n      <h1> Playing <kbd>/{{$route.params.path}}</kbd> </h1>\n    </div>\n    <div class=\"container\">\n      <LogList title=\"Log\" v-bind:items=\"log.as_array()\"></LogList>\n    </div>\n    <br/>\n\n  </div> <!-- /container -->\n</template>\n\n<script>\nimport LogList from '@/components/utils/LogList.vue'\n\nexport default {\n  name: 'start',\n  components: {\n    LogList\n  },\n  data: () => {\n    return {\n      log: new Log(),\n   };\n  },\n  mounted(){\n    var that = this;\n    machine.communication.on_connected.push( () => {\n      // Log\n      that.log.add(`Asking board to start execution of /${that.$route.params.path}`, {icon: 'play-circle', color: 'default'});\n\n      // Send the command\n      machine.communication.command([\"play /\" + that.$route.params.path]).then((data) => {\n        if(data.match(/error/g)){\n          that.log.add(`Error occured why trying to start file ( /${that.$route.params.path} ) execution: <kbd>${data}</kbd>`, {icon: 'times', color: 'error'});\n        }else{\n          that.log.add(`Started playing file ( /${that.$route.params.path} ): <kbd>${data}</kbd>`, {icon: 'thumbs-up', color: 'success'});\n\n          // Go to monitor page\n          that.log.add(`Moving to the monitor page`, {icon: 'arrow-right', color: 'default'});\n          window.location.replace(\"/monitor.html#/monitor/\");\n        }\n      }).catch((why) => {\n        that.log.add(`Error occured why trying to start file ( /${that.$route.params.path} ) execution: <kbd>${why}</kbd>`, {icon: 'times', color: 'error'});\n      });\n    });\n  },\n\n}\n</script>\n\n<style lang=\"less\">\n  .center {\n    text-align: center;\n  }\n</style>\n"]}]}