{"remainingRequest":"/home/arthur/dev/js/Smoothie/node_modules/babel-loader/lib/index.js!/home/arthur/dev/js/Smoothie/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/arthur/dev/js/Smoothie/src/connect/views/Connect.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/arthur/dev/js/Smoothie/src/connect/views/Connect.vue","mtime":1536272788000},{"path":"/home/arthur/dev/js/Smoothie/node_modules/cache-loader/dist/cjs.js","mtime":1535381333659},{"path":"/home/arthur/dev/js/Smoothie/node_modules/babel-loader/lib/index.js","mtime":1534881725000},{"path":"/home/arthur/dev/js/Smoothie/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// @ is an alias to /src\nimport LogList from '@/components/utils/LogList.vue';\nexport default {\n  name: 'connect',\n  data: function data() {\n    return {\n      connection_log: machine.communication.connection_log,\n      machine_log: machine.log,\n      address: '',\n      communication: machine.communication\n    };\n  },\n  methods: {\n    try_single_address: function try_single_address() {\n      machine.communication.try_single_address(this.address).then(function () {}).catch(function () {});\n    }\n  },\n\n  /*created: () => {\n    $(function() {\n        // Try to connect to possible targets\n        machine.try_to_find_machine();\n    });\n  },*/\n  components: {\n    LogList: LogList\n  }\n};",{"version":3,"sources":["Connect.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAsBA;AACA,OAAA,OAAA,MAAA,gCAAA;AAEA,eAAA;AACA,QAAA,SADA;AAEA,QAAA,gBAAA;AAAA,WAAA;AACA,sBAAA,QAAA,aAAA,CAAA,cADA;AAEA,mBAAA,QAAA,GAFA;AAGA,eAAA,EAHA;AAIA,qBAAA,QAAA;AAJA,KAAA;AAKA,GAPA;AAQA,WAAA;AACA,wBAAA,8BAAA;AACA,cAAA,aAAA,CAAA,kBAAA,CAAA,KAAA,OAAA,EAAA,IAAA,CAAA,YAAA,CAAA,CAAA,EAAA,KAAA,CAAA,YAAA,CAAA,CAAA;AACA;AAHA,GARA;;AAaA;;;;;;AAMA,cAAA;AACA;AADA;AAnBA,CAAA","sourcesContent":["<template>\n  <div class=\"connect\">\n    <div v-if=\"communication.try_address_list_failed\">\n      <h2> Please enter a new address </h2>\n      <p> None of our attempts at reaching known addresses have worked, sorry </p>\n      <p> Please enter the address for the board you are trying to control </p>\n      <form>\n        <div class=\"form-group\">\n          <label for=\"address\">Board address :</label>\n          <input v-model=\"address\" type=\"text\" class=\"form-control\" id=\"address\" aria-describedby=\"address_help\" placeholder=\"Enter address\">\n          <small id=\"address_help\" class=\"form-text text-muted\">A local address looks like «192.168.1.123», «localhost» or «smoothie.local». </small>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\" v-on:click=\"try_single_address\">Submit</button>\n      </form>\n      <p> Note :You can find help with network-related topics, such as finding your board's address at <a href=\"http://smoothieware.org/network\"> Network </a> </p>\n    </div>\n    <LogList title=\"Connection log\" v-bind:items=\"connection_log.as_array()\"></LogList>\n    <LogList title=\"Machine log\" v-bind:items=\"machine_log.as_array()\"></LogList>\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\nimport LogList from '@/components/utils/LogList.vue'\n\nexport default {\n  name: 'connect',\n  data: function(){ return {\n    connection_log:machine.communication.connection_log,\n    machine_log:machine.log,\n    address:'',\n    communication:machine.communication,\n  }; },\n  methods: {\n    try_single_address: function(){\n      machine.communication.try_single_address(this.address).then(() => { }).catch(() => { });\n    }\n  },\n  /*created: () => {\n    $(function() {\n        // Try to connect to possible targets\n        machine.try_to_find_machine();\n    });\n  },*/\n  components: {\n    LogList\n  }\n}\n</script>\n"],"sourceRoot":"src/connect/views"}]}