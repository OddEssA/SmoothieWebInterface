{"remainingRequest":"/home/arthur/dev/js/Smoothie/node_modules/babel-loader/lib/index.js!/home/arthur/dev/js/Smoothie/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/arthur/dev/js/Smoothie/src/components/utils/BigMenu.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/arthur/dev/js/Smoothie/src/components/utils/BigMenu.vue","mtime":1536002757976},{"path":"/home/arthur/dev/js/Smoothie/node_modules/cache-loader/dist/cjs.js","mtime":1535381333659},{"path":"/home/arthur/dev/js/Smoothie/node_modules/babel-loader/lib/index.js","mtime":1534881725000},{"path":"/home/arthur/dev/js/Smoothie/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n\nvar _this = this;\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'BigMenu',\n  props: {\n    structure: {\n      type: Object,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      config: machine.config\n    };\n  },\n  methods: {\n    clicked: function clicked(category_name, menu) {\n      // Go to the page for that menu\n      if (menu.clicked == undefined) {\n        navigation.goto(category_name, menu.name, null);\n      } else {\n        menu.clicked.call(_this, category_name, menu.name);\n      } //navigation.goto(category_name, menu.name, null)\n\n    }\n  }\n};",{"version":3,"sources":["BigMenu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,eAAA;AACA,QAAA,SADA;AAEA,SAAA;AACA,eAAA;AAAA,YAAA,MAAA;AAAA,gBAAA;AAAA;AADA,GAFA;AAKA,QAAA,gBAAA;AAAA,WAAA;AACA,cAAA,QAAA;AADA,KAAA;AAEA,GAPA;AAQA,WAAA;AACA,aAAA,iBAAA,aAAA,EAAA,IAAA,EAAA;AAAA;AACA,UAAA,KAAA,OAAA,IAAA,SAAA,EAAA;AACA,mBAAA,IAAA,CAAA,aAAA,EAAA,KAAA,IAAA,EAAA,IAAA;AACA,OAFA,MAEA;AACA,aAAA,OAAA,CAAA,IAAA,CAAA,KAAA,EAAA,aAAA,EAAA,KAAA,IAAA;AACA,OALA,CAMA;;AACA;AARA;AARA,CAAA","sourcesContent":["<template>\n  <div>\n    <div class=\"card\" v-for=\"(children, category_name) in structure\" v-bind:key=\"category_name\">\n      <div class=\"card-header\">\n        <h1>{{category_name}}</h1>\n      </div>\n      <div class='card-body'>\n        <div class='row'>\n          <div class=\"col-md-3\" v-for=\"menu in children\" v-bind:key=\"menu.name\" v-if=\"menu.display == undefined || menu.display(config)\" v-on:click=\"clicked(category_name, menu)\">\n            <div class=\"fa-10x big-menu-icon\">\n              <span class=\"fa-layers fa-fw\" style=\"background:white\">\n                <i class=\"fas fa-circle\" v-bind:style=\"{color: menu.color}\"></i>\n                <i v-bind:class=\"['fa-inverse', 'fas', 'fa-' + menu.icon]\" data-fa-transform=\"shrink-8\"></i>\n              </span>\n            </div>\n            <h3> {{menu.name}} </h3>\n            <p> {{menu.what}} </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: 'BigMenu',\n  props: {\n    structure:{type:Object, required:true}\n  },\n  data: function(){ return {\n    config: machine.config,\n  }},\n  methods: {\n    clicked: (category_name, menu) => { // Go to the page for that menu\n      if( menu.clicked == undefined ){\n        navigation.goto(category_name, menu.name, null)\n      }else{\n        menu.clicked.call(this, category_name, menu.name);\n      }\n      //navigation.goto(category_name, menu.name, null)\n    }\n  },\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"css\">\n/* Make these a bit more compact */\n.big-menu-icon {\n  margin-bottom: -30px;\n  margin-top: -20px;\n}\n\n.card {\n  margin-bottom: 1em;\n  margin-top: 1em;\n  cursor: pointer;\n}\n</style>\n"],"sourceRoot":"src/components/utils"}]}