{"remainingRequest":"/home/arthur/dev/js/Smoothie/node_modules/babel-loader/lib/index.js!/home/arthur/dev/js/Smoothie/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/arthur/dev/js/Smoothie/src/monitor/views/Start.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/arthur/dev/js/Smoothie/src/monitor/views/Start.vue","mtime":1536012411215},{"path":"/home/arthur/dev/js/Smoothie/node_modules/cache-loader/dist/cjs.js","mtime":1535381333659},{"path":"/home/arthur/dev/js/Smoothie/node_modules/babel-loader/lib/index.js","mtime":1534881725000},{"path":"/home/arthur/dev/js/Smoothie/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.match\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport LogList from '@/components/utils/LogList.vue';\nexport default {\n  name: 'start',\n  components: {\n    LogList: LogList\n  },\n  data: function data() {\n    return {\n      log: new Log()\n    };\n  },\n  mounted: function mounted() {\n    var that = this;\n    machine.communication.on_connected.push(function () {\n      // Log\n      that.log.add(\"Asking board to start execution of /\".concat(that.$route.params.path), {\n        icon: 'play-circle',\n        color: 'default'\n      }); // Send the command\n\n      machine.communication.command([\"play /\" + that.$route.params.path]).then(function (data) {\n        if (data.match(/error/g)) {\n          that.log.add(\"Error occured why trying to start file ( /\".concat(that.$route.params.path, \" ) execution: <kbd>\").concat(data, \"</kbd>\"), {\n            icon: 'times',\n            color: 'error'\n          });\n        } else {\n          that.log.add(\"Started playing file ( /\".concat(that.$route.params.path, \" ): <kbd>\").concat(data, \"</kbd>\"), {\n            icon: 'thumbs-up',\n            color: 'success'\n          }); // Go to monitor page\n\n          that.log.add(\"Moving to the monitor page\", {\n            icon: 'arrow-right',\n            color: 'default'\n          });\n          window.location.replace(\"/monitor.html#/monitor/\");\n        }\n      }).catch(function (why) {\n        that.log.add(\"Error occured why trying to start file ( /\".concat(that.$route.params.path, \" ) execution: <kbd>\").concat(why, \"</kbd>\"), {\n          icon: 'times',\n          color: 'error'\n        });\n      });\n    });\n  }\n};",{"version":3,"sources":["Start.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAcA,OAAA,OAAA,MAAA,gCAAA;AAEA,eAAA;AACA,QAAA,OADA;AAEA,cAAA;AACA;AADA,GAFA;AAKA,QAAA,gBAAA;AACA,WAAA;AACA,WAAA,IAAA,GAAA;AADA,KAAA;AAGA,GATA;AAUA,SAVA,qBAUA;AACA,QAAA,OAAA,IAAA;AACA,YAAA,aAAA,CAAA,YAAA,CAAA,IAAA,CAAA,YAAA;AACA;AACA,WAAA,GAAA,CAAA,GAAA,+CAAA,KAAA,MAAA,CAAA,MAAA,CAAA,IAAA,GAAA;AAAA,cAAA,aAAA;AAAA,eAAA;AAAA,OAAA,EAFA,CAIA;;AACA,cAAA,aAAA,CAAA,OAAA,CAAA,CAAA,WAAA,KAAA,MAAA,CAAA,MAAA,CAAA,IAAA,CAAA,EAAA,IAAA,CAAA,UAAA,IAAA,EAAA;AACA,YAAA,KAAA,KAAA,CAAA,QAAA,CAAA,EAAA;AACA,eAAA,GAAA,CAAA,GAAA,qDAAA,KAAA,MAAA,CAAA,MAAA,CAAA,IAAA,gCAAA,IAAA,aAAA;AAAA,kBAAA,OAAA;AAAA,mBAAA;AAAA,WAAA;AACA,SAFA,MAEA;AACA,eAAA,GAAA,CAAA,GAAA,mCAAA,KAAA,MAAA,CAAA,MAAA,CAAA,IAAA,sBAAA,IAAA,aAAA;AAAA,kBAAA,WAAA;AAAA,mBAAA;AAAA,WAAA,EADA,CAGA;;AACA,eAAA,GAAA,CAAA,GAAA,+BAAA;AAAA,kBAAA,aAAA;AAAA,mBAAA;AAAA,WAAA;AACA,iBAAA,QAAA,CAAA,OAAA,CAAA,yBAAA;AACA;AACA,OAVA,EAUA,KAVA,CAUA,UAAA,GAAA,EAAA;AACA,aAAA,GAAA,CAAA,GAAA,qDAAA,KAAA,MAAA,CAAA,MAAA,CAAA,IAAA,gCAAA,GAAA,aAAA;AAAA,gBAAA,OAAA;AAAA,iBAAA;AAAA,SAAA;AACA,OAZA;AAaA,KAlBA;AAmBA;AA/BA,CAAA","sourcesContent":["<template>\n  <div class=\"start\">\n    <div class=\"container center\">\n      <h1> Playing <kbd>/{{$route.params.path}}</kbd> </h1>\n    </div>\n    <div class=\"container\">\n      <LogList title=\"Log\" v-bind:items=\"log.as_array()\"></LogList>\n    </div>\n    <br/>\n\n  </div> <!-- /container -->\n</template>\n\n<script>\nimport LogList from '@/components/utils/LogList.vue'\n\nexport default {\n  name: 'start',\n  components: {\n    LogList\n  },\n  data: () => {\n    return {\n      log: new Log(),\n   };\n  },\n  mounted(){\n    var that = this;\n    machine.communication.on_connected.push( () => {\n      // Log\n      that.log.add(`Asking board to start execution of /${that.$route.params.path}`, {icon: 'play-circle', color: 'default'});\n\n      // Send the command\n      machine.communication.command([\"play /\" + that.$route.params.path]).then((data) => {\n        if(data.match(/error/g)){\n          that.log.add(`Error occured why trying to start file ( /${that.$route.params.path} ) execution: <kbd>${data}</kbd>`, {icon: 'times', color: 'error'});\n        }else{\n          that.log.add(`Started playing file ( /${that.$route.params.path} ): <kbd>${data}</kbd>`, {icon: 'thumbs-up', color: 'success'});\n\n          // Go to monitor page\n          that.log.add(`Moving to the monitor page`, {icon: 'arrow-right', color: 'default'});\n          window.location.replace(\"/monitor.html#/monitor/\");\n        }\n      }).catch((why) => {\n        that.log.add(`Error occured why trying to start file ( /${that.$route.params.path} ) execution: <kbd>${why}</kbd>`, {icon: 'times', color: 'error'});\n      });\n    });\n  },\n\n}\n</script>\n\n<style lang=\"less\">\n  .center {\n    text-align: center;\n  }\n</style>\n"],"sourceRoot":"src/monitor/views"}]}